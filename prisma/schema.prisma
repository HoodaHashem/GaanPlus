generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  restaurants Restaurant[]
  orders  Order[]
  notifications Notification[]
  firstName      String
  lastName       String
  email     String  @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      UserRole @default(USER)
}

model Restaurant {
  id String @id @default(cuid())
  ownerId String
  owner User @relation(fields: [ownerId], references: [id])
  orders Order[]
  menuItems MenuItem[]
  name String
  email String @unique
  address String
  createdAt DateTime @default(now())
}

model Order {
  id String @id @default(cuid())
  orderItems OrderItem[]
  userId String
  User User @relation(fields: [userId], references: [id])
  restaurantId String
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  totalAmount Decimal
  status OrderStatus @default(PENDING)
  createdAt DateTime @default(now())
}

model MenuItem {
  id String @id @default(cuid())
  orderItem OrderItem[]
  restaurantId String
  restaurant Restaurant @relation(fields: [restaurantId], references: [id])
  name String
  description String
  price Decimal
  isAvailable Boolean @default(true)
  createdAt DateTime @default(now())
}

model OrderItem {
  id String @id @default(cuid())
  orderId String
  order Order @relation(fields: [orderId], references: [id])
  menuItemId String
  menuItem MenuItem @relation(fields: [menuItemId], references: [id])
  quantity Decimal
  price Decimal
}

model Notification {
  id String @id @default(cuid())
  userId String
  user User @relation(fields: [userId], references: [id])
  text String
  createdAt DateTime @default(now())
}

enum OrderStatus {
  PENDING
  CONFIRMED
  PREPARING
  READY_FOR_PICKUP
  OUT_FOR_DELIVERY
  DELIVERED
  CANCELLED
}
enum UserRole {
  USER
  OWNER
}
